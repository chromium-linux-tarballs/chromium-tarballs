#################################################
Automating Chromium distribution tarballs with CI
#################################################

.. attention::

    The tarballs generated by this process are not suitable for end-users.
    Without the necessary downstream patching there is no guarantee that the browser will be able to compile;
    upstream only support building Chromium via the bundled toolchain.
    Consult your distribution's Chromium packaging for more information.

This repository uses GitHub CI to automate the generation of tarballs for use by Linux distributions
(and similar downstreams) of the Chromium browser.

The tarballs generated via this process do not contain the following:

- Debian sysroot(s)
- Toolchain (Rust, Clang, etc.)
- third_party/instrumented_libs

Additionally no hooks are run on checkout and only a small subset are run afterwards. These are:

- ``lastchange.py`` for ``build/util/LASTCHANGE`` ``gpu/config/gpu_lists_version.h`` ``skia/ext/skia_commit_hash.h`` ``gpu/webgpu/DAWN_VERSION``
- ensure that ``chrome/test/data/webui/i18n_process_css_test.html`` exists
- update PGO profiles for Chromium and V8

This significantly reduces the size of the tarball; distributions typically want to build against their own libraries and toolchains.

How does it work?
-----------------

Every few hours a GitHub Actions workflow is triggered which checks for new releases via the Google version history API.

If a new release is found the workflow will tag this repository with the version number. This triggers a second workflow which
checks out the Chromium sources, strips out the unnecessary files, and generates a tarball.

Dependencies
------------

The scripts in this repository require the following dependencies:

- app-arch/xz-utils
- dev-lang/python (>=some flavour of 3.x, just use something recent)
- dev-vcs/git
- net-misc/s3cmd

Manual Process
--------------

Required: `export_tarball.py <https://chromium.googlesource.com/chromium/tools/build/+/refs/heads/main/recipes/recipe_modules/chromium/resources/export_tarball.py>`_

While this seems daunting it's not *that* bad.

1. First get a copy of Depot Tools and add it to ``$PATH``.
2. Then create a quick gclient config and modify it to only include the OSes we want (hint: we only want linux, but there are other options)
3. Check out the sources
4. Then run some post-checkout commands
5. touch a file required for tests
6. Grab the appropriate PGO profiles
7. Then generate some tarballs

.. code-block:: bash

    git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
    export PATH="$(pwd)/depot_tools:${PATH}"

    gclient config --name src https://chromium.googlesource.com/chromium/src.git@130.0.6723.91
    echo "target_os = [ 'linux' ]" >> .gclient
    gclient sync --nohooks --no-history

    src/build/util/lastchange.py -o src/build/util/LASTCHANGE
    src/build/util/lastchange.py -m GPU_LISTS_VERSION --revision-id-only --header src/gpu/config/gpu_lists_version.h
    src/build/util/lastchange.py -m SKIA_COMMIT_HASH -s src/third_party/skia --header src/skia/ext/skia_commit_hash.h
    src/build/util/lastchange.py -s src/third_party/dawn --revision src/gpu/webgpu/DAWN_VERSION

    touch src/chrome/test/data/webui/i18n_process_css_test.html

    src/tools/update_pgo_profiles.py '--target=linux' update '--gs-url-base=chromium-optimization-profiles/pgo_profiles'
    src/v8/tools/builtins-pgo/download_profiles.py --force --check-v8-revision --depot-tools depot_tools download

    ./export_tarball.py --version --xz --test-data --remove-nonessential-files chromium-130.0.6723.91 --progress --src-dir src/
    mv chromium-130.0.6723.91.tar.xz chromium-130.0.6723.91-testdata.tar.xz
    ./export_tarball.py --version --xz --remove-nonessential-files chromium-130.0.6723.91 --progress --src-dir src/
