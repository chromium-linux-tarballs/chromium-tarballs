name: Chromium Version Tagging

on:
  schedule:
    - cron: '0 */8 * * *'
  workflow_dispatch:
  repository_dispatch:
    types: [tag-chromium-versions]

jobs:
  tag_chromium_versions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # If we use the default github.token we can't trigger workflows when we push new tags
          token: ${{ secrets.PAT }}
          # If we don't set fetch-depth to 0, we won't be able to fetch tags
          fetch-depth: 0

      - name: Get Chromium release info
        run: |
          curl --fail-with-body --max-time 30 --no-progress-meter -o releases.json \
            'https://versionhistory.googleapis.com/v1/chrome/platforms/linux/channels/all/versions/all/releases?filter=channel%3C=dev&order_by=version%20desc'
          echo "Latest versions:"
          jq -r 'limit(10; .releases[].version)' releases.json

      - name: Configure Git
        run: |
          git config --global user.name "Chromium Bot"
          git config --global user.email "chromium@gentoo.org"

      - name: Tag new versions
        id: tag_versions
        run: |
          new_releases=""
          for channel in stable beta dev; do
              version=$(jq -r --arg CHANNEL "${channel}" \
                'limit(1; .releases[] | select(.name | test("/channels/" + $CHANNEL + "/")) | .version)' \
                releases.json)
              if ! echo "${version}" | tr '\n' '~' | grep -Pq '^(\d{1,4}\.){3}\d{1,4}~$'; then
                  echo "Channel \"${channel}\" has invalid version \"${version}\""
                  exit 1
              fi
              echo "Channel \"${channel}\" is at version ${version}"
              if git rev-parse "${version}" >/dev/null 2>&1; then
                  echo "Tag ${version} already exists"
              else
                  _ver=$(jq -r --arg VERSION "${version}" \
                    '.releases[]
                     | select(.version==$VERSION)
                     | "Chromium " + .version + ": "
                       + (.name | sub(".*/channels/(?<ch>\\w+)/.*"; "\(.ch)"))
                       + " "
                       + (.serving.startTime
                          | sub("\\.\\d+"; "")
                          | fromdateiso8601
                          | strftime("(%B %d, %Y at %I:%M UTC)"))
                    ' releases.json)
                  echo "Tagging ${_ver}"
                  git tag -a "${version}" -m "${_ver}"
                  if [ -n "$new_releases" ]; then
                      new_releases="${new_releases} | ${_ver}"
                  else
                      new_releases="${_ver}"
                  fi
              fi
          done
          echo "Pushing tags to GitHub"
          git push --follow-tags

          # Export new releases for IRC notification
          echo "new_releases=$new_releases" >> $GITHUB_OUTPUT

      - name: Update IRC
        uses: Gottox/irc-message-action@5ab60c2121053c99a383753390fb169a0045694d # v2.1.5
        if: steps.tag_versions.outputs.new_releases != ''
        with:
          server: irc.libera.chat
          notice: false
          channel: "#gentoo-chromium"
          nickname: chromium-notifs
          message: "üè∑Ô∏è New release: ${{ steps.tag_versions.outputs.new_releases }}"
