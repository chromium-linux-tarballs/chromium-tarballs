name: Chromium Tarball Generation

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: Chromium version
        required: true

jobs:
  generate-tarball:
    runs-on: ubuntu-latest
    outputs:
      annotation: ${{ steps.get_release_info.outputs.annotation }}
      channel: ${{ steps.get_release_info.outputs.channel }}

    steps:
      - name: Free up space on the runner
        run: |
          echo Before:
          df -m .
          sudo rm -rf \
            /usr/local/.ghcup \
            /usr/local/lib/android \
            /usr/local/share/powershell \
            /usr/share/dotnet \
            /usr/share/swift \
            "$AGENT_TOOLSDIRECTORY"
          echo After:
          df -m .

      - name: Checkout repository
        uses: actions/checkout@v4
        # tag annotations
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "Chromium Bot"
          git config --global user.email "chromium@gentoo.org"
          git config --global advice.detachedHead false

      - name: Get release info
        id: get_release_info
        if: github.event_name == 'push'
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          echo "annotation=$(git tag -l --format='%(contents:subject)' ${{ github.ref_name }})" >> ${GITHUB_OUTPUT}
          echo "channel=$(git tag -l --format='%(contents:subject)' ${{ github.ref_name }} | awk '{ print $3 }')" >> ${GITHUB_OUTPUT}
          echo "channel=$(git tag -l --format='%(contents:subject)' ${{ github.ref_name }} | awk '{ print $3 }')" >> ${GITHUB_ENV}

      - name: Package Chromium tarballs for ${{ inputs.version || github.ref_name }}
        run: |
          ./package_chromium.sh ${{ inputs.version || github.ref_name }}
          test -d src/third_party/llvm     || echo '### NOTE: Failed to download LLVM components' >> $GITHUB_STEP_SUMMARY
          test -d src/third_party/rust-src || echo '### NOTE: Failed to download Rust components' >> $GITHUB_STEP_SUMMARY

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
            name: build-artifacts
            path: out/
            compression-level: 0
            retention-days: 5

      - name: Notify success
        if: success() && github.event_name == 'push'
        uses: Gottox/irc-message-action@5ab60c2121053c99a383753390fb169a0045694d # v2.1.5
        with:
          server: irc.libera.chat
          notice: false
          channel: "#gentoo-chromium"
          nickname: chromium-notifs
          message: "Successfully generated Chromium tarballs for ${{ github.ref_name }} (${{ steps.get_release_info.outputs.channel }})"

      - name: Notify failure
        if: failure() && github.event_name == 'push'
        uses: Gottox/irc-message-action@5ab60c2121053c99a383753390fb169a0045694d # v2.1.5
        with:
          server: irc.libera.chat
          notice: false
          channel: "#gentoo-chromium"
          nickname: chromium-notifs
          message: "Failed to generate Chromium tarballs for ${{ github.ref_name }} (${{ steps.get_release_info.outputs.channel }})"

  upload-tarball:
    runs-on: ubuntu-latest

    needs: generate-tarball

    container:
      image: gentoo/stage3:nomultilib

    steps:
      - name: Install dependencies
        run: >
          emerge-webrsync && getuto &&
          emerge --getbinpkg s3cmd

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
            name: build-artifacts

      - name: Upload tarballs to S3
        run: |
          s3cmd --host=syd1.digitaloceanspaces.com \
          --host-bucket='%(bucket)s.syd1.digitaloceanspaces.com' \
          --access_key=${{ secrets.S3_ACCESS_KEY }} \
          --secret_key=${{ secrets.S3_SECRET_KEY }} \
          put chromium*.tar.xz* s3://${{ vars.S3_BUCKET }}/

      - name: Notify success
        if: success()
        uses: Gottox/irc-message-action@5ab60c2121053c99a383753390fb169a0045694d # v2.1.5
        with:
          server: irc.libera.chat
          notice: false
          channel: "#gentoo-chromium"
          nickname: chromium-notifs
          message: "Successfully uploaded Chromium tarballs for ${{ inputs.version || github.ref_name }} ${{ needs.generate-tarball.outputs.channel && format('({0})', needs.generate-tarball.outputs.channel)}}"

      - name: Notify failure
        if: failure()
        uses: Gottox/irc-message-action@5ab60c2121053c99a383753390fb169a0045694d # v2.1.5
        with:
          server: irc.libera.chat
          notice: false
          channel: "#gentoo-chromium"
          nickname: chromium-notifs
          message: "Failed to upload Chromium tarballs for ${{ inputs.version || github.ref_name }} ${{ needs.generate-tarball.outputs.channel && format('({0})', needs.generate-tarball.outputs.channel)}}"

  create-release:
    runs-on: ubuntu-latest
    needs: [generate-tarball, upload-tarball]

    steps:
      - name: Create Release
        id: create_release
        if: github.event_name == 'push' && needs.generate-tarball.outputs.channel == 'stable'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ needs.generate-tarball.outputs.annotation }}
          body: |
            Files:
            - [Chromium ${{ github.ref_name }}](https://chromium-tarballs.distfiles.gentoo.org/chromium-${{ github.ref_name }}-linux.tar.xz)
            - [Chromium ${{ github.ref_name }} hashes](https://chromium-tarballs.distfiles.gentoo.org/chromium-${{ github.ref_name }}-linux.tar.xz.hashes)
            - [Chromium ${{ github.ref_name }} testdata](https://chromium-tarballs.distfiles.gentoo.org/chromium-${{ github.ref_name }}-linux-testdata.tar.xz)
            - [Chromium ${{ github.ref_name }} testdata hashes](https://chromium-tarballs.distfiles.gentoo.org/chromium-${{ github.ref_name }}-linux-testdata.tar.xz.hashes)

          draft: false
          prerelease: false
